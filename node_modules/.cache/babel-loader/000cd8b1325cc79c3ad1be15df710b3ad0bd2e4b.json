{"code":"var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class,\n    _temp2,\n    _jsxFileName = '/Users/mirandazhu/Documents/GitHub/SA-dashboard/src/components/map.js';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport mapboxgl from 'mapbox-gl';\nimport { connect } from 'react-redux';\nimport SA_atlas from '../data/SA_atlas.geojson';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicHljdzEwOSIsImEiOiJja2JmdWhpYTcwejNqMnFvNXVmb2puOWNkIn0.zseMY8O36O1QOESFeG4vFQ';\n\nvar Map = (_temp2 = _class = function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Map.__proto__ || Object.getPrototypeOf(Map)).call.apply(_ref, [this].concat(args))), _this), _this.mapRef = React.createRef(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Map, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.setFill();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.map = new mapboxgl.Map({\n        container: this.mapRef.current,\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [138.7, -34.9],\n        zoom: 9\n      });\n\n      var hoveredSA2Id = null;\n      var clickedSA2 = null;\n\n      this.map.on('load', function () {\n        /*this.map.addSource('countries', {\n          type: 'geojson',\n          data: this.props.data\n        });\n         this.map.addLayer({\n          id: 'countries',\n          type: 'fill',\n          source: 'countries'\n        }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n        */\n        _this2.map.addSource('sa2', {\n          type: 'geojson',\n          data: SA_atlas\n        });\n\n        _this2.map.addLayer({\n          'id': 'sa2-fills',\n          'type': 'fill',\n          'source': 'sa2',\n          'layout': {},\n          'paint': {\n            'fill-color': {\n              property: 'income_diversity',\n              stops: [[0.1024, '#fdedc4'], [0.66, '#f09647'], [1.2168, '#dd4b27']]\n            },\n            'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1, 0.8]\n          }\n        });\n\n        _this2.map.addLayer({\n          'id': 'sa2-borders',\n          'type': 'line',\n          'source': 'sa2',\n          'layout': {},\n          'paint': {\n            'line-color': ['case', ['boolean', ['feature-state', 'click'], false], '#ff0000', '#fef4e1'],\n            'line-width': ['case', ['boolean', ['feature-state', 'click'], false], 2, 1],\n            'line-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 1.5, 0.5]\n          }\n        });\n\n        _this2.map.addLayer({\n          'id': 'water',\n          'type': 'fill',\n          'source': 'sa2',\n          'layout': {},\n          'paint': {\n            'fill-color': \"#0d1e2b\"\n          }\n        });\n\n        // When the user moves their mouse over the sa2-fill layer, we'll update the\n        // feature state for the feature under the mouse.\n        _this2.map.on('mousemove', 'sa2-fills', function (e) {\n          console.log(hoveredSA2Id);\n          if (e.features.length > 0) {\n            if (hoveredSA2Id) {\n              _this2.map.setFeatureState({ source: 'sa2', id: hoveredSA2Id }, { hover: false });\n            }\n            hoveredSA2Id = e.features[0].id;\n            _this2.map.setFeatureState({ source: 'sa2', id: hoveredSA2Id }, { hover: true });\n          }\n        });\n\n        // When the mouse leaves the sa2-fill layer, update the feature state of the\n        // previously hovered feature.\n\n        _this2.map.on('mouseleave', 'sa2-fills', function () {\n          if (hoveredSA2Id) {\n            _this2.map.setFeatureState({ source: 'sa2', id: hoveredSA2Id }, { hover: false });\n          }\n          hoveredSA2Id = null;\n        });\n\n        _this2.map.on('click', 'sa2-fills', function (e) {\n          /*clickedSA2 = e.features[0].id; //properties.name;\n          this.map.setFeatureState(\n              { source: 'sa2', id: clickedSA2},\n              { click: true }\n          );*/\n\n          var clickedFeatures = _this2.map.querySourceFeatures('sa2_fills', {\n            filter: ['all', ['>', ['to-number', ['get', 'income_diversity']], 0] //e.features[0].properties.inequality]\n            ]\n          });\n          //clickedFeatures = [35, 38, 45 , 16]; //uncomment to see what should happen visually when a region is clicked\n          clickedFeatures.forEach(function (f) {\n            // For each feature, update its 'click' state\n            _this2.map.setFeatureState({\n              source: 'sa2',\n              id: f\n            }, {\n              click: true\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', { ref: this.mapRef, className: 'absolute top right left bottom', __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Map;\n}(React.Component), _class.propTypes = {\n  data: PropTypes.object.isRequired,\n  active: PropTypes.object.isRequired\n}, _temp2);\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data,\n    active: state.active\n  };\n}\n\nMap = connect(mapStateToProps)(Map);\n\nexport default Map;","map":{"version":3,"sources":["src/components/map.js"],"names":["React","PropTypes","mapboxgl","connect","SA_atlas","accessToken","Map","mapRef","createRef","setFill","map","container","current","style","center","zoom","hoveredSA2Id","clickedSA2","on","addSource","type","data","addLayer","property","stops","e","console","log","features","length","setFeatureState","source","id","hover","clickedFeatures","querySourceFeatures","filter","forEach","f","click","Component","propTypes","object","isRequired","active","mapStateToProps","state"],"mappings":"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","file":"map.js","sourceRoot":"/Users/mirandazhu/Documents/GitHub/SA-dashboard","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport mapboxgl from 'mapbox-gl'\nimport { connect } from 'react-redux'\nimport SA_atlas from '../data/SA_atlas.geojson'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicHljdzEwOSIsImEiOiJja2JmdWhpYTcwejNqMnFvNXVmb2puOWNkIn0.zseMY8O36O1QOESFeG4vFQ';\n\nlet Map = class Map extends React.Component {\n  mapRef = React.createRef();\n  map;\n\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    active: PropTypes.object.isRequired\n  };\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [138.7, -34.9],\n      zoom: 9\n    });\n\n    var hoveredSA2Id = null;\n    var clickedSA2 = null;\n\n    this.map.on('load', () => {\n      /*this.map.addSource('countries', {\n        type: 'geojson',\n        data: this.props.data\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'country-label-lg'); // ID metches `mapbox/streets-v9`\n      */\n      this.map.addSource('sa2', {\n        type: 'geojson',\n        data: SA_atlas\n      });\n\n      this.map.addLayer({\n        'id': 'sa2-fills',\n        'type': 'fill',\n        'source': 'sa2',\n        'layout': {},\n        'paint': {\n          'fill-color': {\n            property: 'income_diversity',\n            stops: [[0.1024, '#fdedc4'], [0.66, '#f09647'], [1.2168, '#dd4b27']]\n            },\n          'fill-opacity': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            1,\n            0.8\n          ]\n        }\n      });\n       \n      this.map.addLayer({\n        'id': 'sa2-borders',\n        'type': 'line',\n        'source': 'sa2',\n        'layout': {},\n        'paint': {\n          'line-color': [\n            'case',\n            ['boolean', ['feature-state', 'click'], false],\n            '#ff0000',\n            '#fef4e1'\n          ],\n          'line-width': [\n            'case',\n            ['boolean', ['feature-state', 'click'], false],\n            2,\n            1\n          ],\n          'line-opacity': [\n            'case',\n            ['boolean', ['feature-state', 'hover'], false],\n            1.5,\n            0.5\n          ]\n        }\n      });\n\n      this.map.addLayer({\n        'id': 'water',\n        'type': 'fill',\n        'source': 'sa2',\n        'layout': {},\n        'paint': {\n          'fill-color': \"#0d1e2b\"\n        }\n      }\n\n      );\n\n      // When the user moves their mouse over the sa2-fill layer, we'll update the\n      // feature state for the feature under the mouse.\n      this.map.on('mousemove', 'sa2-fills', (e) => {\n        console.log(hoveredSA2Id);\n        if (e.features.length > 0) {\n          if (hoveredSA2Id) {\n            this.map.setFeatureState(\n              { source: 'sa2', id: hoveredSA2Id },\n              { hover: false }\n            );\n          }\n          hoveredSA2Id = e.features[0].id;\n          this.map.setFeatureState(\n            { source: 'sa2', id: hoveredSA2Id },\n            { hover: true }\n          );\n        }\n      });\n       \n      // When the mouse leaves the sa2-fill layer, update the feature state of the\n      // previously hovered feature.\n      \n      this.map.on('mouseleave', 'sa2-fills', () => {\n        if (hoveredSA2Id) {\n          this.map.setFeatureState(\n            { source: 'sa2', id: hoveredSA2Id },\n            { hover: false }\n          );\n        }\n        hoveredSA2Id = null;\n      });\n\n      this.map.on('click', 'sa2-fills', (e) => {\n        /*clickedSA2 = e.features[0].id; //properties.name;\n        this.map.setFeatureState(\n            { source: 'sa2', id: clickedSA2},\n            { click: true }\n        );*/\n\n          var clickedFeatures = this.map.querySourceFeatures('sa2_fills', {\n            filter: [\n              'all',\n              ['>', ['to-number', ['get', 'income_diversity']], 0]//e.features[0].properties.inequality]\n            ]\n          });\n          //clickedFeatures = [35, 38, 45 , 16]; //uncomment to see what should happen visually when a region is clicked\n          clickedFeatures.forEach((f) => {\n            // For each feature, update its 'click' state\n            this.map.setFeatureState({\n              source: 'sa2',\n              id: f\n              },{\n              click: true\n            });\n          });\n      });\n\n\n\n    });\n  }\n\n  render() {\n    return (\n      <div ref={this.mapRef} className=\"absolute top right left bottom\" />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    data: state.data,\n    active: state.active\n  };\n}\n\nMap = connect(mapStateToProps)(Map);\n\nexport default Map;\n"]},"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"mapbox-gl","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"mapboxgl"}]},{"source":"react-redux","imported":["connect"],"specifiers":[{"kind":"named","imported":"connect","local":"connect"}]},{"source":"../data/SA_atlas.geojson","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SA_atlas"}]}],"exports":{"exported":[],"specifiers":[]}}}}